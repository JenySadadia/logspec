./kbuild

  - kbuild_001.log: Error compiling C file
      "error: label at end of compound statement"

  - kbuild_002.log: Kbuild error: modules disabled
      *** The present kernel configuration has modules disabled.
      *** To use the module feature, please run "make menuconfig" etc.
      *** to enable CONFIG_MODULES.

  - kbuild_003.log: Kbuild modpost error
      ERROR: modpost: module binfmt_misc uses symbol d_drop from namespace ANDROID_GKI_VFS_EXPORT_ONLY, but does not import it.
      ERROR: modpost: module binfmt_misc uses symbol dentry_open from namespace ANDROID_GKI_VFS_EXPORT_ONLY, but does not import it.

  - kbuild_004.log: Error linking vmlinux
      arm-linux-gnueabihf-ld: kernel/rcu/update.o: in function `rcu_trc_cmpxchg_need_qs':
      update.c:(.text+0x318): undefined reference to `__bad_cmpxchg'
      arm-linux-gnueabihf-ld: kernel/rcu/update.o: in function `rcu_read_unlock_trace_special':
      update.c:(.text+0x3ec): undefined reference to `__bad_cmpxchg'
      arm-linux-gnueabihf-ld: kernel/rcu/update.o: in function `trc_read_check_handler':
      update.c:(.text+0x480): undefined reference to `__bad_cmpxchg'
      arm-linux-gnueabihf-ld: kernel/rcu/update.o: in function `trc_inspect_reader':
      update.c:(.text+0x1568): undefined reference to `__bad_cmpxchg'
      arm-linux-gnueabihf-ld: update.c:(.text+0x1598): undefined reference to `__bad_cmpxchg'
      arm-linux-gnueabihf-ld: kernel/rcu/update.o:update.c:(.text+0x1d10): more undefined references to `__bad_cmpxchg' follow

  - kbuild_005.log: Make error: No rule to make target.
      make: *** No rule to make target 'Image'.  Stop.

  - kbuild_006.log: Kbuild error: Can't find default configuration
      ***
      *** Can't find default configuration "arch/riscv/configs/nommu_k210_defconfig"!
      ***
      make[1]: *** [scripts/kconfig/Makefile:104: nommu_k210_defconfig] Error 1

  - kbuild_007.log: Error in included file compiling C source to assembler.
      In file included from ./arch/arm/include/asm/atomic.h:16,
                       from ./include/linux/atomic.h:7,
                       from ./include/asm-generic/bitops/lock.h:5,
                       from ./arch/arm/include/asm/bitops.h:245,
                       from ./include/linux/bitops.h:63,
                       from ./include/linux/log2.h:12,
                       from kernel/bounds.c:13:
      ./arch/arm/include/asm/cmpxchg.h: In function ‘__cmpxchg’:
      ./arch/arm/include/asm/cmpxchg.h:167:12: error: implicit declaration of function ‘cmpxchg_emu_u8’ [-Werror=implicit-function-declaration]
        167 |   oldval = cmpxchg_emu_u8((volatile u8 *)ptr, old, new);
            |            ^~~~~~~~~~~~~~
      cc1: some warnings being treated as errors
      make[2]: *** [scripts/Makefile.build:117: kernel/bounds.s] Error 1

  - kbuild_008.log: Compiler error
      drivers/gpu/drm/amd/amdgpu/../display/dc/link/link_factory.c: In function ‘construct_phy’:
      drivers/gpu/drm/amd/amdgpu/../display/dc/link/link_factory.c:743:1: error: the frame size of 1040 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
        743 | }
            | ^
      cc1: all warnings being treated as errors
      make[6]: *** [scripts/Makefile.build:244: drivers/gpu/drm/amd/amdgpu/../display/dc/link/link_factory.o] Error 1

  - kbuild_009.log: Make error: No rule to make target.
      make: *** No rule to make target 'tools/build/Makefile.feature'.  Stop.


  - kbuild_010.log: Compiler error: error in an included file.
      In file included from ./arch/arm64/include/asm/pgtable-hwdef.h:8,
                       from ./arch/arm64/include/asm/processor.h:34,
                       from ./arch/arm64/include/asm/elf.h:118,
                       from ./include/linux/elf.h:5,
                       from ./include/linux/elfnote.h:62,
                       from arch/arm64/kernel/vdso32/note.c:11:
      ./arch/arm64/include/asm/memory.h: In function ‘kaslr_offset’:
      ./arch/arm64/include/asm/memory.h:85:43: error: ‘KASAN_SHADOW_SCALE_SHIFT’ undeclared (first use in this function)
         85 | #define KASAN_SHADOW_END ((UL(1) << (64 - KASAN_SHADOW_SCALE_SHIFT)) \
            |                                           ^~~~~~~~~~~~~~~~~~~~~~~~
      ./arch/arm64/include/asm/memory.h:50:31: note: in expansion of macro ‘KASAN_SHADOW_END’
         50 | #define BPF_JIT_REGION_START (KASAN_SHADOW_END)
            |                               ^~~~~~~~~~~~~~~~
      ...
      make[1]: *** [arch/arm64/kernel/vdso32/Makefile:164: arch/arm64/kernel/vdso32/note.o] Error 1

./linux_boot

  - linux_boot_001.log: Not even reached the kernel loading stage

  - linux_boot_002.log: Kernel panic before reaching the command line prompt
      Kernel panic - not syncing: VFS: Unable to mount root fs on "/dev/ram0" or unknown-block(1,0)

  - linux_boot_003.log: Kernel started loading but didn't reach a cmdline prompt. No errors found.

  - linux_boot_004.log: Command-line prompt reached, no errors found.

  - linux_boot_005.log: Command-line prompt found, multiple errors found (WARNINGs and BUGs)
    NOTE: multiple resets and repeated errors found until the prompt is reached.
    TODO: May need to refine the parsing of this one.
      ------------[ cut here ]------------
      missing return thunk: 0xffffffff9e445838-0xffffffff9e44583d: e9 00 00 00 00
      WARNING: CPU: 0 PID: 0 at arch/x86/kernel/alternative.c:730 apply_returns+0xc0/0x241

      BUG: unable to handle page fault for address: 0000000000200286


./test_baseline

  - test_baseline_001.log: Linux boot OK but baseline test not detected

  - test_baseline_002.log: Baseline test detected with no errors

  - test_baseline_003.log: dmesg emerg errors
      kern  :emerg : call_irq_handler: 2.55 No irq handler for vector
      kern  :emerg : call_irq_handler: 1.55 No irq handler for vector
      kern  :emerg : call_irq_handler: 3.55 No irq handler for vector

  - test_baseline_004.log: dmesg alert errors with kernel errors during boot
      kern  :alert : BUG: kernel NULL pointer dereference, address: 00000000000002fc
      kern  :alert : #PF: supervisor read access in kernel mode
      kern  :alert : #PF: error_code(0x0000) - not-present page
